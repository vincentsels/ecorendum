@use '@angular/material' as mat;
@use './parameters' as params;

/* Color styles */

.color-primary { color: mat.get-color-from-palette(params.$ecorendum-dark-primary) !important }
.color-accent { color: mat.get-color-from-palette(params.$ecorendum-dark-accent) !important }
.color-warn { color: mat.get-color-from-palette(params.$ecorendum-dark-warn) !important }

.bg-color-primary { background-color: mat.get-color-from-palette(params.$ecorendum-dark-primary) !important; color: white; }
.bg-color-accent { background-color: mat.get-color-from-palette(params.$ecorendum-dark-accent) !important; color: white; }
.bg-color-warn { background-color: mat.get-color-from-palette(params.$ecorendum-dark-warn) !important; color: white; }
.bg-color-warn a { color: mat.get-color-from-palette(params.$ecorendum-dark-warn, 100) !important }
.bg-color-warn a:hover { color: mat.get-color-from-palette(params.$ecorendum-dark-warn, 200) !important }

// This should move just to the component that uses it, but lots of work :)
.bg-color-accent-semi-transparent { background-color: rgba(mat.get-color-from-palette(params.$ecorendum-dark-accent), 0.8) !important }
.bg-color-accent-transparent { background-color: rgba(mat.get-color-from-palette(params.$ecorendum-dark-accent), 0.4) !important }
.bg-color-warn-semi-transparent { background-color: rgba(mat.get-color-from-palette(params.$ecorendum-dark-warn), 0.8) !important }
.bg-color-warn-transparent { background-color: rgba(mat.get-color-from-palette(params.$ecorendum-dark-warn), 0.4) !important }

.accent { color: mat.get-color-from-palette(params.$ecorendum-dark-accent, A200) }

.success { color: mat.get-color-from-palette(params.$ecorendum-dark-accent, A400) }
.neutral { color: #ffffff }
.warning { color: mat.get-color-from-palette(params.$ecorendum-dark-warn, A100) }
.danger { color: mat.get-color-from-palette(params.$ecorendum-dark-warn, 600) }

.bg-color-danger { background-color: rgba(mat.get-color-from-palette(params.$ecorendum-dark-warn), 0.20) !important }
.bg-color-success { background-color: rgba(mat.get-color-from-palette(params.$ecorendum-dark-accent), 0.20) !important }

.impact-extremely-positive { color: mat.get-color-from-palette(params.$ecorendum-dark-accent, 400) }
.impact-very-positive { color: mat.get-color-from-palette(params.$ecorendum-dark-accent, 300) }
.impact-moderately-positive { color: mat.get-color-from-palette(params.$ecorendum-dark-accent, 200) }
.impact-somewhat-positive { color: mat.get-color-from-palette(params.$ecorendum-dark-accent, 100) }
.impact-neutral { color: #ffffff }
.impact-somewhat-negative { color: mat.get-color-from-palette(params.$ecorendum-dark-warn, 100) }
.impact-moderately-negative { color: mat.get-color-from-palette(params.$ecorendum-dark-warn, 200) }
.impact-very-negative { color: mat.get-color-from-palette(params.$ecorendum-dark-warn, 300) }
.impact-extremely-negative { color: mat.get-color-from-palette(params.$ecorendum-dark-warn, 400) }

/* Link color styles */

a { color: mat.get-color-from-palette(params.$ecorendum-dark-primary, 200) }
a:hover { color: mat.get-color-from-palette(params.$ecorendum-dark-primary, 300) }

/* Dialog */

.mat-mdc-dialog-container,
.mat-mdc-dialog-container .mdc-dialog__surface {
  background-color: mat.get-theme-color(params.$ecorendum-theme, 'background', 'background');
}

.light-mode {

  /* Color styles */

  .color-primary { color: mat.get-color-from-palette(params.$ecorendum-light-primary) !important }
  .color-accent { color: mat.get-color-from-palette(params.$ecorendum-light-accent) !important }
  .color-warn { color: mat.get-color-from-palette(params.$ecorendum-light-warn) !important }

  .bg-color-primary { background-color: mat.get-color-from-palette(params.$ecorendum-light-primary) !important; color: white; }
  .bg-color-accent { background-color: mat.get-color-from-palette(params.$ecorendum-light-accent) !important; color: white; }
  .bg-color-error { background-color: mat.get-color-from-palette(params.$ecorendum-light-warn, 800) !important; color: white; }
  .bg-color-warn { background-color: mat.get-color-from-palette(params.$ecorendum-light-warn, 400) !important; color: white; }

  // This should move just to the component that uses it, but lots of work :)
  .bg-color-accent-semi-transparent { background-color: mat.get-color-from-palette(params.$ecorendum-light-accent, 600) !important }
  .bg-color-accent-transparent { background-color: mat.get-color-from-palette(params.$ecorendum-light-accent, 300) !important }
  .bg-color-warn-semi-transparent { background-color: mat.get-color-from-palette(params.$ecorendum-light-warn, 600) !important }
  .bg-color-warn-transparent { background-color: mat.get-color-from-palette(params.$ecorendum-light-warn, 300) !important }

  .accent { color: mat.get-color-from-palette(params.$ecorendum-light-accent, A200) }

  .success { color: mat.get-color-from-palette(params.$ecorendum-light-accent, A400) }
  .neutral { color: var(--mat-icon-color); opacity: 0.4; }
  .warning { color: mat.get-color-from-palette(params.$ecorendum-light-warn, A100) }
  .danger { color: mat.get-color-from-palette(params.$ecorendum-light-warn, 600) }

  .bg-color-danger { background-color: rgba(mat.get-color-from-palette(params.$ecorendum-light-warn), 0.15) !important }
  .bg-color-success { background-color: rgba(mat.get-color-from-palette(params.$ecorendum-light-accent), 0.15) !important }

  .impact-extremely-positive { color: mat.get-color-from-palette(params.$ecorendum-light-accent, 800) }
  .impact-very-positive { color: mat.get-color-from-palette(params.$ecorendum-light-accent, 600) }
  .impact-moderately-positive { color: mat.get-color-from-palette(params.$ecorendum-light-accent, 400) }
  .impact-somewhat-positive { color: mat.get-color-from-palette(params.$ecorendum-light-accent, 200) }
  .impact-neutral { color: var(--mat-icon-color); opacity: 0.4; }
  .impact-somewhat-negative { color: mat.get-color-from-palette(params.$ecorendum-light-warn, 200) }
  .impact-moderately-negative { color: mat.get-color-from-palette(params.$ecorendum-light-warn, 400) }
  .impact-very-negative { color: mat.get-color-from-palette(params.$ecorendum-light-warn, 600) }
  .impact-extremely-negative { color: mat.get-color-from-palette(params.$ecorendum-light-warn, 800) }

  /* Link color styles */

  a { color: mat.get-color-from-palette(params.$ecorendum-light-primary, 600) }
  a:hover { color: mat.get-color-from-palette(params.$ecorendum-light-primary, 800) }

  /* Dialog */

  .mat-mdc-dialog-container,
  .mat-mdc-dialog-container .mdc-dialog__surface {
    background-color: mat.get-theme-color(params.$ecorendum-light-theme, 'background', 'background');
  }
}
